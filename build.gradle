allprojects {
    group 'org.specnaz'
    version '1.5.2'
}

subprojects {
    repositories {
        mavenCentral()
    }

    apply plugin: 'java'

    configurations {
        provided {
            dependencies.all { dep ->
                configurations.default.exclude group: dep.group, module: dep.name
            }
        }
        compile.extendsFrom provided
    }
}

configure(subprojects.findAll { isAMainProject(it) }) {
    apply plugin: 'signing'
    apply plugin: 'maven'

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        useGpgCmd()
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'Specnaz'
                    packaging 'jar'
                    description 'Library for writing beautiful, RSpec/Jasmine/Mocha/Jest-stylespecifications in Java, Kotlin and Groovy'
                    url 'https://github.com/skinny85/specnaz'

                    scm {
                        url 'https://github.com/skinny85/specnaz.git'
                    }

                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            name 'Adam Ruka'
                        }
                    }
                }
            }
        }
    }
}

private boolean isAMainProject(Project it) {
    it.name.startsWith('specnaz') && !it.name.contains('example')
}

buildscript {
    ext.kotlin_version = '1.2.0'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

configure(subprojects.findAll { isAKotlinProject(it) }) {
    buildscript {
        ext.kotlin_version = '1.2.0'

        repositories {
            mavenCentral()
        }

        dependencies {
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        }
    }

    apply plugin: 'kotlin'

    dependencies {
        provided "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    }
}

private boolean isAKotlinProject(Project it) {
    it.name.contains('kotlin') || it.name == 'specnaz-testng-examples' ||
            it.name == 'specnaz-junit-platform-examples'
}

ext {
    junit_version = '4.12'
    testng_version = '7.0.0'
    junit_platform_version = '1.4.2'
    assertj_version = '3.5.2'
}
